#BlueJ class context
comment0.target=AnalyzeBabyNames
comment0.text=\r\n\ totalBirths()\ prints\ the\ number\ of\ unique\ boy\ names,\ the\ number\ of\ unique\ girl\ names,\ the\ total\r\n\ number\ of\ names,\ total\ number\ of\ births,\ total\ number\ of\ girl\ births,\ and\ total\ number\ of\ boy\ \r\n\ births\ in\ the\ file.\ \r\n\ \r\n\ getRank()\ returns\ the\ rank\ of\ the\ name\ in\ the\ file\ for\ the\ given\ gender,\ where\ rank\ 1\ is\ the\ \r\n\ name\ with\ the\ largest\ number\ of\ births.\ If\ the\ name\ is\ not\ in\ the\ file,\ then\ -1\ is\ returned.\r\n\ @param\ year\ is\ an\ int\ representing\ the\ year\ of\ the\ file\ to\ parse\r\n\ @param\ name\ is\ a\ String\ representing\ the\ name\ to\ determine\ a\ rank\ for\r\n\ @param\ gender\ is\ a\ String\ representing\ the\ gender\ the\ name\ needs\ to\ be\r\n\ \r\n\ getName()\ returns\ the\ name\ of\ the\ person\ in\ the\ file\ at\ this\ rank,\ for\ the\ given\ gender,\ \r\n\ where\ rank\ 1\ is\ the\ name\ with\ the\ largest\ number\ of\ births.\ If\ the\ rank\ does\ not\ exist\ in\ the\ file,\ \r\n\ then\ \u201CNO\ NAME\u201D\ is\ returned.\r\n\ @param\ year\ is\ an\ int\ representing\ the\ year\ of\ the\ file\ to\ parse\r\n\ @param\ rank\ is\ an\ int\ representing\ the\ rank\ of\ the\ name\ to\ return\r\n\ @param\ gender\ is\ a\ String\ representing\ the\ gender\ the\ name\ needs\ to\ be\r\n\ \r\n\ whatIsNameInYear()\ determines\ what\ name\ would\ have\ been\ named\ if\ the\ given\ name\ were\ born\ in\ a\ \r\n\ different\ year,\ based\ on\ the\ same\ popularity.\r\n\ @param\ name\ is\ a\ String\ representing\ the\ name\ to\ determine\ a\ rank\ for\r\n\ @param\ year\ is\ an\ int\ representing\ the\ year\ the\ name\ was\ born\ in\r\n\ @param\ newYear\ is\ an\ int\ representing\ the\ year\ to\ determine\ the\ new\ name\r\n\ @param\ gender\ is\ a\ String\ representing\ the\ gender\ both\ names\ need\ to\ be\r\n\ \r\n\ yearOfHighestRank()\ selects\ a\ range\ of\ files\ to\ process\ and\ returns\ an\ integer,\ the\ year\ with\ \r\n\ the\ highest\ rank\ for\ the\ name\ and\ gender.\ If\ the\ name\ and\ gender\ are\ not\ in\ any\ of\ the\ selected\ \r\n\ files,\ it\ returns\ -1.\r\n\ @param\ name\ is\ a\ String\ representing\ the\ name\r\n\ @param\ gender\ is\ a\ String\ representing\ the\ gender\r\n\ \r\n\ getAverageRank()\ \ selects\ a\ range\ of\ files\ to\ process\ and\ returns\ a\ double\ representing\ the\ \r\n\ average\ rank\ of\ the\ name\ and\ gender\ over\ the\ selected\ files.\ It\ should\ return\ -1.0\ if\ the\ name\ \r\n\ is\ not\ ranked\ in\ any\ of\ the\ selected\ files.\r\n\ @param\ name\ is\ a\ String\ representing\ the\ name\r\n\ @param\ gender\ is\ a\ String\ representing\ the\ gender\r\n\ \r\n\ getTotalBirthsRankedHigher()\ returns\ an\ integer,\ the\ total\ number\ of\ births\ of\ those\ names\ with\ \r\n\ the\ same\ gender\ and\ same\ year\ who\ are\ ranked\ higher\ than\ name.\r\n\ @param\ year\ is\ an\ int\ representing\ the\ year\r\n\ @param\ name\ is\ a\ String\ representing\ the\ name\r\n\ @param\ gender\ is\ a\ String\ representing\ the\ gender\r\n\ \r\n\ @author\ Aditya\ Singh\r\n\ @version\ July\ 2019\r\n
comment1.params=year\ name\ gender
comment1.target=int\ getTotalBirthsRankedHigher(int,\ java.lang.String,\ java.lang.String)
comment10.params=
comment10.target=void\ testGetName()
comment11.params=year\ name\ gender
comment11.target=int\ getRank(int,\ java.lang.String,\ java.lang.String)
comment12.params=
comment12.target=void\ testGetRank()
comment13.params=
comment13.target=void\ totalBirths()
comment14.params=year
comment14.target=org.apache.commons.csv.CSVParser\ getFileParser(int)
comment2.params=
comment2.target=void\ testGetTotalBirthsRankedHigher()
comment3.params=name\ gender
comment3.target=double\ getAverageRank(java.lang.String,\ java.lang.String)
comment4.params=
comment4.target=void\ testGetAverageRank()
comment5.params=name\ gender
comment5.target=int\ yearOfHighestRank(java.lang.String,\ java.lang.String)
comment6.params=
comment6.target=void\ testYearOfHighestRank()
comment7.params=name\ year\ newYear\ gender
comment7.target=void\ whatIsNameInYear(java.lang.String,\ int,\ int,\ java.lang.String)
comment8.params=
comment8.target=void\ testWhatIsNameInYear()
comment9.params=year\ rank\ gender
comment9.target=java.lang.String\ getName(int,\ int,\ java.lang.String)
numComments=15
